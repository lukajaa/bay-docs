[{"data":1,"prerenderedAt":69},["Reactive",2],{"search-api":3},[4,11,20,27,50,60],{"id":5,"path":6,"dir":7,"title":8,"description":7,"keywords":9,"body":10},"content:0.index.md","/","","Home",[],"     Bay Clock 3   Understand the basics of Vue and Nuxt to learn how to manage Bay Clock     Fully typed  Uses   VueJS ,   Nuxt 3 ,   Nuxt UI , and   VueUse  All data stored in JSON format  ",{"id":12,"path":13,"dir":14,"title":15,"description":16,"keywords":17,"body":19},"content:1.introduction:1.getting-started.md","/introduction/getting-started","introduction","Getting Started","Get a local version of Bay Clock 3 on your computer",[18],"Cloning the rep","  Getting Started  Get a local version of Bay Clock 3 on your computer  Cloning the rep   Clone the Bay Clock 3 github rep     git   clone   git@github.com:lukajaa/bay-clock-3.git\n   Install the dependencies in the   bay-clock-3  folder:      npm   install\n     yarn   install\n     pnpm   install   --shamefully-hoist\n   Run the   dev  command to start Bay Clock 3 in development mode:      npm   run   dev\n     yarn   dev\n     pnpm   run   dev\n   ✨ Well done! Visit   http://localhost:3000  to see the live preview  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":21,"path":22,"dir":14,"title":23,"description":24,"keywords":25,"body":26},"content:1.introduction:2.project-structure.md","/introduction/project-structure","Vue and Nuxt","Bay Clock 3 is built upon VueJS, a progressive javascript framework that builds on basic HTML, JS, and CSS to add reactivity and a more powerful developer experience. Nuxt, in turn, is a VueJS framework that streamlines development, SEO, and deployment",[],"  Vue and Nuxt  Bay Clock 3 is built upon VueJS, a progressive javascript framework that builds on basic HTML, JS, and CSS to add reactivity and a more powerful developer experience. Nuxt, in turn, is a VueJS framework that streamlines development, SEO, and deployment  An understanding of HTML, javascript, and JSON is required. I will try to explain each component, page, and function pretty in-depth. However, I reccomend learning the basics of both   VueJS  (and the composition API) as well as   Nuxt .",{"id":28,"path":29,"dir":30,"title":31,"description":32,"keywords":33,"body":49},"content:2.api:1.components.md","/api/components","api","Components","Discover every component you can use in your content.",[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"\u003CAlert />","\u003CBadge />","\u003CBlockHero />","\u003CButtonLink />","\u003CCallout />","\u003CCard />","\u003CCardGrid />","\u003CCodeGroup />","\u003CCodeBlock />","\u003CCopyButton />","\u003CIcon />","\u003CList />","\u003CSandbox />","\u003CTerminal />","\u003CVideoPlayer />","  Components  Discover every component you can use in your content.   \u003CAlert />     Check out an   info  alert with   code  and a   link .   Check out a   success  alert with   code  and a   link .   Check out a   warning  alert with   code  and a   link .   Check out a   danger  alert with   code  and a   link .     ::alert{type=\"info\"}\n   Check out an   **info**   alert with   `code`   and a [  link  ](  /  ).\n   ::\n   \n   ::alert{type=\"success\"}\n   Check out a   **success**   alert with   `code`   and a [  link  ](  /  ).\n   ::\n   \n   ::alert{type=\"warning\"}\n   Check out a   **warning**   alert with   `code`   and a [  link  ](  /  ).\n   ::\n   \n   ::alert{type=\"danger\"}\n   Check out a   **danger**   alert with   `code`   and a [  link  ](  /  ).\n   ::\n     \u003CBadge />   \u003CBadge />  support same types as   \u003CAlert /> .     v1.2  Deprecated   Not found!     :badge[  v1.2  ]\n   \n   :badge[  Deprecated  ]{type=\"warning\"}\n   \n   ::badge{type=\"danger\"}\n   Not found!\n   ::\n     \u003CBlockHero />      Document-driven framework   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.     ::block-hero\n   ---\n   cta:\n     -   Get started\n     -   /get-started\n   secondary:\n     -   Open on GitHub →\n     -   https://github.com/nuxtlabs/docus\n   snippet: npx nuxi@latest init docus-app -t nuxtlabs/docus-starter\n   ---\n   #title\n   Document-driven framework\n   \n   #description\n   Docus reconciles content creators and developers by offering to both the best tools to create and scale content-based websites.\n   ::\n     \u003CButtonLink />    Play on StackBlitz     :button-link[Play on StackBlitz]{icon=\"IconStackBlitz\" href=\"https://stackblitz.com/github/nuxtlabs/docus-starter\" blank}\n     \u003CCallout />   \u003CCallout />  support same types as   \u003CAlert /> .      This is a callout! Click me to open.   This is the content of the callout.    This is a callout! Click me to open.   This is the content of the callout.     ::callout\n   #summary\n   This is a callout! Click me to open.\n   \n   #content\n   This is the content of the callout.\n   ::\n    \n   ::callout{type=\"warning\"}\n   #summary\n   This is a callout! Click me to open.\n   \n   #content\n   This is the content of the callout.\n   ::\n     \u003CCard />      Nuxt Architecture.   Based on   Nuxt 3  and   Nuxt Content .   \nUse Nuxt to build a static site, or a serverless app.      ::card{icon=\"logos:nuxt-icon\"}\n    #title\n    Nuxt Architecture.\n    #description\n    Based on   **Nuxt 3**   and   **Nuxt Content**  . :br\n    Use Nuxt to build a static site, or a serverless app.\n    ::\n     \u003CCardGrid />      What's included?      Nuxt Architecture.   Harness the full power of Nuxt and the Nuxt ecosystem.    Vue Components.   Use built-in components (or your own!) inside your content.    Write Markdown.   Enjoy the ease and simplicity of Markdown and discover MDC syntax.     ::card-grid\n   #title\n   What's included\n   \n   #root\n   :ellipsis\n   \n   #default\n     ::card\n     #title\n     Nuxt Architecture.\n     #description\n     Harness the full power of Nuxt and the Nuxt ecosystem.\n     ::\n     ::card\n     #title\n     Vue Components.\n     #description\n     Use built-in components (or your own!) inside your content.\n     ::\n     ::card\n     #title\n     Write Markdown.\n     #description\n     Enjoy the ease and simplicity of Markdown and discover MDC syntax.\n     ::\n   ::\n     \u003CCodeGroup />  This component uses   slots  to create a tab panel of your code examples or preview.        yarn   add   docus\n     npm   install   docus\n     ::code-group\n     ```bash [Yarn]\n     yarn   add   docus\n     ```\n     ```bash [NPM]\n     npm   install   docus\n     ```\n   ::\n     \u003CCodeBlock />  To be used inside a   \u003CCodeGroup />  component to display a preview of some rendered code.     Hello World!     /* Added as a child of   `\u003CCodeGroup />`   */\n   \n   ::code-block{label=\"Preview\" preview}\n     ::badge\n     Hello World!\n     ::\n   ::\n     \u003CCopyButton />        :copy-button{content=\"hey!\"}\n     \u003CIcon />  Icon component gives you access to all   100,000+  icons from   icones.js.org .          :icon{name=\"logos:nuxt-icon\"}\n   :icon{name=\"logos:vue\"}\n   :icon{name=\"logos:nuxt-icon\"}\n     \u003CList />       Important  Always    Amazing  Congrats    Do you know?  You can also do this    Be careful  Use with precautions    Drinking too much  Driving drunk     ::list{type=\"primary\"}\n   -   **Important**\n   -   Always\n   ::\n   \n   ::list{type=\"success\"}\n   -   Amazing\n   -   Congrats\n   ::\n   \n   ::list{type=\"info\"}\n   -   Do you know?\n   -   You can also do this\n   ::\n   \n   ::list{type=\"warning\"}\n   -   Be careful\n   -   Use with precautions\n   ::\n   \n   ::list{type=\"danger\"}\n   -   Drinking too much\n   -   Driving drunk\n   ::\n    \u003CSandbox />  Embed CodeSandbox/StackBlitz easily in your documentation with great performances.  Using the   IntersectionObserver  to load when visible in the viewport.        :sandbox{src=\"https://codesandbox.io/embed/nuxt-content-l164h?hidenavigation=1&theme=dark\"}\n     \u003CTerminal />        :terminal{content=\"nuxi build\"}\n     \u003CVideoPlayer />         ::div\n     :video-player{src=\"https://www.youtube.com/watch?v=o9e12WbKrd8\"}\n   ::\n   html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":51,"path":52,"dir":30,"title":53,"description":54,"keywords":55,"body":59},"content:2.api:2.composables.md","/api/composables","Composables","Discover the Docus composables to use in your custom Vue components and pages.",[56,57,58],"useDocus()","useMenu()","useScrollspy()","  Composables  Discover the Docus composables to use in your custom Vue components and pages.   useDocus()    useDocus  ()  gives access to docus runtime config, all default values and your custom config from   app.config.ts    config  refers to the merged config of the current page.   main ,   header ,   aside ,   footer  and   titleTemplate  can be set from   _dir.yml  and any   page.md  file.  The configs in   app.config  file will be used as defaults.     \u003C  script   setup  >\n   const   {   config   }   =   useDocus  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  div  >\n       \u003C  h1  >{{ config.title }}\u003C/  h1  >\n       \u003C  p  >{{ config.description }}\u003C/  p  >\n     \u003C/  div  >\n   \u003C/  template  >\n    tree  refers to the current navigation tree that is displayed in the   aside  component.     \u003C  script   setup  >\n   const   {   tree   }   =   useDocus  ()\n   \u003C/  script  >\n   \n   \u003C  template  >\n     \u003C  DocsAsideTree   :links  =  \"tree\"   />\n   \u003C/  template  >\n    useMenu()   useMenu()  gives access to   $menu  plugin controlling mobile navigation globally.     const   {\n     // Is menu visible\n     visible  ,\n     // Close menu function\n     close  ,\n     // Open menu function\n     open  ,\n     // Toggle menu function\n     toggle\n   }   =   useMenu  ()\n    useScrollspy()   useScrollspy()  is used in   docs  layout to make the ToC display the currently visible headings.     const   {\n     // Headings on the page\n     visibleHeadings  ,\n     // Active headings (for the current page)\n     activeHeadings  ,\n     // Update headings (an array of DOM nodes)\n     updateHeadings\n   }   =   useScrollspy  ()\n   html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",{"id":61,"path":62,"dir":30,"title":63,"description":64,"keywords":65,"body":68},"content:2.api:3.layouts.md","/api/layouts","Layouts","Docus provides multiple built-in layouts for displaying your Markdown pages.",[66,67],"default","page","  Layouts  Docus provides multiple built-in layouts for displaying your Markdown pages.   default  The default layout for every page created in the project. This layout renders multiple section alongside the content:   Aside navigation menu (togglable with   aside: false/true )  Page bottom section (togglable with   bottom: false/true )  Table of content (togglable with   toc: false/true )     ---\n   aside  :   true\n   bottom  :   true\n   toc  :   false\n   ---\n   \n   Your awesome content\n  Current page is live sample of default layout.   page   page  layout is content focused layout. This layout does not render aside menu of table of contents.  This layout accept some configuration from content front-matter.    fluid : By setting   fluid: true  in content front-matter the content will be rendered in full width.   constrainedClass : Using this option you can modify layout container look. Like constraining layout width of changing the background.   padded : Setting   padded: true  in front-matter will add horizontal padding in the layout.     ---\n   title  :   Home\n   layout  :   page\n   fluid  :   true\n   ---\n  Check   Home page  as live sample of page layout  html .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}html.dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .dark .shiki span {color: var(--shiki-dark);background: var(--shiki-dark-bg);font-style: var(--shiki-dark-font-style);font-weight: var(--shiki-dark-font-weight);text-decoration: var(--shiki-dark-text-decoration);}html .default .shiki span {color: var(--shiki-default);background: var(--shiki-default-bg);font-style: var(--shiki-default-font-style);font-weight: var(--shiki-default-font-weight);text-decoration: var(--shiki-default-text-decoration);}",1700782456894]